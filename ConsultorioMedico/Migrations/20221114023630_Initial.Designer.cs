// <auto-generated />
using System;
using ConsultorioMedico;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsultorioMedico.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221114023630_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ConsultorioMedico.Models.Estudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechayHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Estudios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechayHora = new DateTime(2021, 11, 13, 23, 36, 29, 652, DateTimeKind.Local).AddTicks(7940),
                            Nombre = "Alergología",
                            PacienteId = 1,
                            Resultado = "POSITIVO - Maiz"
                        },
                        new
                        {
                            Id = 2,
                            FechayHora = new DateTime(2022, 11, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3550),
                            Nombre = "Amniocentesis",
                            PacienteId = 1,
                            Resultado = "POSITIVO"
                        },
                        new
                        {
                            Id = 3,
                            FechayHora = new DateTime(2021, 3, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3601),
                            Nombre = "Alergología",
                            PacienteId = 2,
                            Resultado = "NO DETECTABLE"
                        },
                        new
                        {
                            Id = 4,
                            FechayHora = new DateTime(2022, 1, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3669),
                            Nombre = "Análisis de sangre de glucagón",
                            PacienteId = 3,
                            Resultado = "POSITIVO - Hipoglucemia"
                        },
                        new
                        {
                            Id = 5,
                            FechayHora = new DateTime(2022, 12, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3673),
                            Nombre = "Biopsia de ganglio centinela",
                            PacienteId = 4,
                            Resultado = "PENDIENTE"
                        },
                        new
                        {
                            Id = 6,
                            FechayHora = new DateTime(2024, 11, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3677),
                            Nombre = "Densitometría ósea",
                            PacienteId = 4,
                            Resultado = "PENDIENTE"
                        },
                        new
                        {
                            Id = 7,
                            FechayHora = new DateTime(2021, 2, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3681),
                            Nombre = "Dióxido de carbono (CO2) en la sangre",
                            PacienteId = 5,
                            Resultado = "Síndrome de Cushing"
                        },
                        new
                        {
                            Id = 8,
                            FechayHora = new DateTime(2022, 9, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3685),
                            Nombre = "Ecografía",
                            PacienteId = 6,
                            Resultado = "Bajo liquido amniotico"
                        },
                        new
                        {
                            Id = 9,
                            FechayHora = new DateTime(2022, 9, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3688),
                            Nombre = "Electrocardiograma",
                            PacienteId = 7,
                            Resultado = "Ritmo cardiaco regular"
                        },
                        new
                        {
                            Id = 10,
                            FechayHora = new DateTime(2023, 3, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3692),
                            Nombre = "Estudio del sueño",
                            PacienteId = 8,
                            Resultado = "PENDIENTE"
                        },
                        new
                        {
                            Id = 11,
                            FechayHora = new DateTime(2022, 12, 17, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3695),
                            Nombre = "Fluoroscopia",
                            PacienteId = 9,
                            Resultado = "PENDIENTE"
                        },
                        new
                        {
                            Id = 12,
                            FechayHora = new DateTime(2022, 10, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3779),
                            Nombre = "Hisopado nasal",
                            PacienteId = 10,
                            Resultado = "POSITIVO - Covid19"
                        },
                        new
                        {
                            Id = 13,
                            FechayHora = new DateTime(2022, 8, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3783),
                            Nombre = "Prueba de cristales en la orina",
                            PacienteId = 11,
                            Resultado = "POSITIVO"
                        },
                        new
                        {
                            Id = 14,
                            FechayHora = new DateTime(2021, 12, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3786),
                            Nombre = "Prueba de cultivo fúngico",
                            PacienteId = 12,
                            Resultado = "POSITIVO"
                        },
                        new
                        {
                            Id = 15,
                            FechayHora = new DateTime(2021, 11, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3790),
                            Nombre = "Prueba de cultivo fúngico",
                            PacienteId = 13,
                            Resultado = "NEGATIVO"
                        },
                        new
                        {
                            Id = 16,
                            FechayHora = new DateTime(2019, 11, 13, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3793),
                            Nombre = "Alergología",
                            PacienteId = 14,
                            Resultado = "POSITIVO - Gatos"
                        },
                        new
                        {
                            Id = 17,
                            FechayHora = new DateTime(2022, 8, 1, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3796),
                            Nombre = "Alergología",
                            PacienteId = 14,
                            Resultado = "POSITIVO - Lactosa"
                        },
                        new
                        {
                            Id = 18,
                            FechayHora = new DateTime(2023, 11, 16, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(3803),
                            Nombre = "Alergología",
                            PacienteId = 15,
                            Resultado = "PENDIENTE"
                        });
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Especialidad = "Pediatria",
                            Matricula = "XSQER 23123",
                            Nombre = "Fernando Gonzalez"
                        },
                        new
                        {
                            Id = 2,
                            Especialidad = "Medicina interna",
                            Matricula = "SETQW 43253",
                            Nombre = "Leticia Gomez"
                        },
                        new
                        {
                            Id = 3,
                            Especialidad = "Cardiologia",
                            Matricula = "SFRAD 43689",
                            Nombre = "Hugo Kin"
                        },
                        new
                        {
                            Id = 4,
                            Especialidad = "Cirujia toracica",
                            Matricula = "METJA 93452",
                            Nombre = "Joaquin Chew"
                        },
                        new
                        {
                            Id = 5,
                            Especialidad = "Neurologo",
                            Matricula = "ADGTY 32134",
                            Nombre = "Ivan Rueda"
                        },
                        new
                        {
                            Id = 6,
                            Especialidad = "Cirujia ortopedica",
                            Matricula = "READR 36543",
                            Nombre = "Emilia Raineri"
                        },
                        new
                        {
                            Id = 7,
                            Especialidad = "Quiropractico",
                            Matricula = "RRATT 68345",
                            Nombre = "Facundo Magico"
                        },
                        new
                        {
                            Id = 8,
                            Especialidad = "Genetica",
                            Matricula = "FJGKK 69450",
                            Nombre = "Martina Humberti"
                        },
                        new
                        {
                            Id = 9,
                            Especialidad = "Oncologia",
                            Matricula = "AAWER 97312",
                            Nombre = "Diego Trelew"
                        },
                        new
                        {
                            Id = 10,
                            Especialidad = "Cirujia pie y tobillo",
                            Matricula = "RKASD 34524",
                            Nombre = "Francisco Martini"
                        },
                        new
                        {
                            Id = 11,
                            Especialidad = "Cuidados paleativos",
                            Matricula = "RREAT 03203",
                            Nombre = "Indiana Jackson"
                        });
                });

            modelBuilder.Entity("ConsultorioMedico.Models.MedicosEstudios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstudioId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicosEstudios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstudioId = 1,
                            MedicoId = 2
                        },
                        new
                        {
                            Id = 2,
                            EstudioId = 16,
                            MedicoId = 2
                        },
                        new
                        {
                            Id = 3,
                            EstudioId = 17,
                            MedicoId = 2
                        },
                        new
                        {
                            Id = 4,
                            EstudioId = 18,
                            MedicoId = 8
                        },
                        new
                        {
                            Id = 5,
                            EstudioId = 16,
                            MedicoId = 8
                        },
                        new
                        {
                            Id = 6,
                            EstudioId = 17,
                            MedicoId = 8
                        },
                        new
                        {
                            Id = 7,
                            EstudioId = 18,
                            MedicoId = 2
                        },
                        new
                        {
                            Id = 8,
                            EstudioId = 2,
                            MedicoId = 1
                        },
                        new
                        {
                            Id = 9,
                            EstudioId = 3,
                            MedicoId = 2
                        },
                        new
                        {
                            Id = 10,
                            EstudioId = 4,
                            MedicoId = 5
                        },
                        new
                        {
                            Id = 11,
                            EstudioId = 5,
                            MedicoId = 9
                        },
                        new
                        {
                            Id = 12,
                            EstudioId = 5,
                            MedicoId = 4
                        },
                        new
                        {
                            Id = 13,
                            EstudioId = 5,
                            MedicoId = 6
                        },
                        new
                        {
                            Id = 14,
                            EstudioId = 6,
                            MedicoId = 7
                        },
                        new
                        {
                            Id = 15,
                            EstudioId = 7,
                            MedicoId = 8
                        },
                        new
                        {
                            Id = 16,
                            EstudioId = 8,
                            MedicoId = 10
                        },
                        new
                        {
                            Id = 17,
                            EstudioId = 9,
                            MedicoId = 11
                        },
                        new
                        {
                            Id = 18,
                            EstudioId = 9,
                            MedicoId = 3
                        },
                        new
                        {
                            Id = 19,
                            EstudioId = 10,
                            MedicoId = 4
                        },
                        new
                        {
                            Id = 20,
                            EstudioId = 11,
                            MedicoId = 5
                        },
                        new
                        {
                            Id = 21,
                            EstudioId = 12,
                            MedicoId = 6
                        },
                        new
                        {
                            Id = 22,
                            EstudioId = 13,
                            MedicoId = 7
                        },
                        new
                        {
                            Id = 23,
                            EstudioId = 14,
                            MedicoId = 9
                        },
                        new
                        {
                            Id = 24,
                            EstudioId = 15,
                            MedicoId = 11
                        },
                        new
                        {
                            Id = 25,
                            EstudioId = 15,
                            MedicoId = 10
                        });
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Lopez",
                            DNI = 23129234,
                            FechaNacimiento = new DateTime(1968, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6170),
                            Nombre = "Henrique"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Kim",
                            DNI = 35123432,
                            FechaNacimiento = new DateTime(1989, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6662),
                            Nombre = "Emilia"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Ze",
                            DNI = 43185662,
                            FechaNacimiento = new DateTime(2004, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6681),
                            Nombre = "Ambar"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Koral",
                            DNI = 21453434,
                            FechaNacimiento = new DateTime(1966, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6685),
                            Nombre = "Santiago"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Mazer",
                            DNI = 12457234,
                            FechaNacimiento = new DateTime(1949, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6688),
                            Nombre = "Milagros"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Cervi",
                            DNI = 33156903,
                            FechaNacimiento = new DateTime(1977, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6691),
                            Nombre = "Diego"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Certi",
                            DNI = 13124884,
                            FechaNacimiento = new DateTime(1939, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6694),
                            Nombre = "Juan"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Kermelon",
                            DNI = 22125684,
                            FechaNacimiento = new DateTime(1967, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6697),
                            Nombre = "Junior"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Juego",
                            DNI = 40129234,
                            FechaNacimiento = new DateTime(2006, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6700),
                            Nombre = "Trevor"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Predeterminado",
                            DNI = 39078012,
                            FechaNacimiento = new DateTime(1964, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6703),
                            Nombre = "Tomas"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "Perez",
                            DNI = 12343490,
                            FechaNacimiento = new DateTime(1968, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6706),
                            Nombre = "Estanislao"
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "Dorple",
                            DNI = 28675666,
                            FechaNacimiento = new DateTime(1989, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6709),
                            Nombre = "Romeo"
                        },
                        new
                        {
                            Id = 13,
                            Apellido = "Buzzsack",
                            DNI = 45854353,
                            FechaNacimiento = new DateTime(2003, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6713),
                            Nombre = "Lucas"
                        },
                        new
                        {
                            Id = 14,
                            Apellido = "Pzcaecae",
                            DNI = 34578634,
                            FechaNacimiento = new DateTime(1994, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6716),
                            Nombre = "Thomas"
                        },
                        new
                        {
                            Id = 15,
                            Apellido = "Gonzalez",
                            DNI = 23461434,
                            FechaNacimiento = new DateTime(1961, 9, 10, 23, 36, 29, 654, DateTimeKind.Local).AddTicks(6718),
                            Nombre = "Francisco"
                        });
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Estudio", b =>
                {
                    b.HasOne("ConsultorioMedico.Models.Paciente", "Paciente")
                        .WithMany("Estudios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ConsultorioMedico.Models.MedicosEstudios", b =>
                {
                    b.HasOne("ConsultorioMedico.Models.Estudio", "Estudio")
                        .WithMany("MedicosEstudios")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultorioMedico.Models.Medico", "Medico")
                        .WithMany("MedicosEstudios")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudio");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Estudio", b =>
                {
                    b.Navigation("MedicosEstudios");
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Medico", b =>
                {
                    b.Navigation("MedicosEstudios");
                });

            modelBuilder.Entity("ConsultorioMedico.Models.Paciente", b =>
                {
                    b.Navigation("Estudios");
                });
#pragma warning restore 612, 618
        }
    }
}
